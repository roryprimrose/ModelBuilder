namespace ModelBuilder.ValueGenerators
{
    using System;

    /// <summary>
    ///     The <see cref="AgeValueGenerator" />
    ///     class is used to generate numbers that should represent a persons age.
    /// </summary>
    public class AgeValueGenerator : NumericValueGenerator
    {
        /// <inheritdoc />
        protected override bool IsMatch(IBuildChain buildChain, Type type, string referenceName)
        {
            var baseSupported = base.IsMatch(buildChain, type, referenceName);

            if (baseSupported == false)
            {
                return false;
            }

            if (string.IsNullOrEmpty(referenceName))
            {
                // This is neither a property nor a parameter
                return false;
            }

            if (referenceName.IndexOf("age", StringComparison.OrdinalIgnoreCase) > -1)
            {
                return true;
            }

            return false;
        }

        /// <inheritdoc />
        protected override object GetMaximum(Type type, string referenceName, object context)
        {
            return MaxAge;
        }

        /// <inheritdoc />
        protected override object GetMinimum(Type type, string referenceName, object context)
        {
            return MinAge;
        }

        /// <summary>
        ///     Gets or sets the maximum age generated by this instance.
        /// </summary>
        public int MaxAge { get; set; } = 100;

        /// <summary>
        ///     Gets or sets the minimum age generated by this instance.
        /// </summary>
        public int MinAge { get; set; } = 1;

        /// <inheritdoc />
        public override int Priority { get; } = 1000;
    }
}