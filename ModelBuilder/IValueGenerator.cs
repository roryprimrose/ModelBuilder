namespace ModelBuilder
{
    using System;

    /// <summary>
    ///     The <see cref="IValueGenerator" />
    ///     interface defines the members for generating values.
    /// </summary>
    /// <remarks>
    ///     Values generated by <see cref="IValueGenerator" /> are different to types created by <see cref="ITypeCreator" /> in
    ///     that they do not have their properties set after construction.
    ///     Value types and immutable types (strings for example) should use <see cref="IValueGenerator" /> to create them
    ///     rather than <see cref="ITypeCreator" />.
    /// </remarks>
    public interface IValueGenerator
    {
        /// <summary>
        ///     Generates a new value of the specified type.
        /// </summary>
        /// <param name="type">The type of value to generate.</param>
        /// <param name="referenceName">Identifies the possible parameter or property name the value is intended for.</param>
        /// <param name="executeStrategy">The execution strategy.</param>
        /// <returns>A new value of the type.</returns>
        object Generate(Type type, string referenceName, IExecuteStrategy executeStrategy);

        /// <summary>
        ///     Returns whether the specified type is supported by this generator.
        /// </summary>
        /// <param name="type">The type to evaluate.</param>
        /// <param name="referenceName">Identifies the possible parameter or property name the value is intended for.</param>
        /// <param name="buildChain">The chain of instances built up to this point.</param>
        /// <returns><c>true</c> if the type is supported; otherwise <c>false</c>.</returns>
        bool IsSupported(Type type, string referenceName, IBuildChain buildChain);

        /// <summary>
        ///     Gets the priority for this generator.
        /// </summary>
        int Priority { get; }
    }
}